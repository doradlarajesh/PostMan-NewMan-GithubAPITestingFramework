{
	"info": {
		"_postman_id": "93dc4f4d-c24d-4f6d-9666-60cd0df8453b",
		"name": "GitHub APIs",
		"description": "Play and Test Github APIs with Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Repositories",
			"item": [
				{
					"name": "Get User Repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81cd4bd9-eebd-4d83-a684-634c23c28a7f",
								"exec": [
									"/* https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#list-repositories-for-a-user */\r",
									"\r",
									"//Postman uses Chai Assertion library BDD style for readable tests\r",
									"//pm is a javascript postman objectwhich provides access to request, response data and variables\r",
									"\r",
									"//User collection variable is set at collection level pre-request script as it may be used in multiple requests. And folder level prerequest script is run before executing individual request.\r",
									"\r",
									"const reposResponse = pm.response;\r",
									"const jsonReposResponse = pm.response.json()\r",
									"\r",
									"//Test 1: Validate whether status of this api is 200\r",
									"pm.test(\"Status code is 200\",function(){\r",
									"   reposResponse.to.have.status(200);\r",
									"   reposResponse.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test2: Validating some header content\r",
									"\r",
									"pm.test(\" Response Header information is as expected\", function(){\r",
									"    reposResponse.to.have.header(\"Server\")\r",
									"    pm.expect(reposResponse.headers.get(\"Server\")).to.equal(\"GitHub.com\")\r",
									"\r",
									"    reposResponse.to.have.header(\"Content-Type\")\r",
									"    pm.expect(reposResponse.headers.get(\"Content-Type\")).to.equal(\"application/json; charset=utf-8\")\r",
									"\r",
									"});\r",
									"\r",
									"//Test3: Validating some header content is not present\r",
									"pm.test(\"Transfer-Encoding1234 shouldnt present in response Headers\",function(){\r",
									"    reposResponse.to.not.have.header(\"Transfer-Encoding1234\")\r",
									"\r",
									"});\r",
									"\r",
									"//Test 4: Validating Response cookies\r",
									"pm.test(\"No cookies should be present\",function(){\r",
									"    console.log(\"Cookie Count is  \" + pm.response.cookies.count())\r",
									"    pm.expect(pm.response.cookies.count()).to.eql(0)\r",
									"});\r",
									"\r",
									"//Test5: Get all public repo names and store in collection variable\r",
									"pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
									"pm.collectionVariables.set(\"publicRepos\")\r",
									"\r",
									"let nuumberOfPublicRepos = Object.keys(pm.response.json())\r",
									"//JSON.parse(pm.response);\r",
									"console.log(\"nuumberOfPublicRepos\" + nuumberOfPublicRepos.length)\r",
									"\r",
									"\r",
									"//Test6 : Response Schema validation\r",
									"const schema = {\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"};\r",
									"\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"\r",
									"\r",
									"//using nom AJV schema validator\r",
									"  pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04f2ab08-078b-4b10-9699-914022736a9f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b3449bad-be7d-43c6-9475-8b3bff1ea7eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{usertoken}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json"
							},
							{
								"key": "X-GitHub-Api-Version",
								"value": "2022-11-28"
							}
						],
						"url": "https://api.github.com/users/{{user}}/repos"
					},
					"response": []
				}
			],
			"id": "0de3309b-33dd-4499-bb9b-65155b383f59"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{usertoken}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ea3b60ca-7a91-4536-a02a-aa0703b56177",
				"type": "text/javascript",
				"exec": [
					"pm.collectionVariables.set(\"user\",\"doradlarajesh\")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f614cb53-884c-4e92-bdf7-660b4c20a90a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "GitUserName",
			"value": "doradlarajesh"
		},
		{
			"key": "usertoken",
			"value": ""
		},
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "publicRepos",
			"value": ""
		},
		{
			"key": "user",
			"value": "doradlarajesh"
		}
	]
}